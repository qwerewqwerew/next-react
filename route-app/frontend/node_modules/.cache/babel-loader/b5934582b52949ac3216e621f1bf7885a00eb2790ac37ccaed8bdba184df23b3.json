{"ast":null,"code":"var _jsxFileName = \"H:\\\\class07\\\\lesson\\\\04_react\\\\04_react+next\\\\learning\\\\route-app\\\\frontend\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Challenge / Exercise\n\n// 1. 컴포넌트 페이지 5개 추가 (콘텐츠는 h1으로 간단히 구성)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. 5개의 페이지에 라우팅 과 라우트 정의 하기\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. 모든 페이지에 <MainNavigation> 컴포넌트를 추가하는 root layout 을 추가하기\n// 4. MainNavigation 에 페이지 링크 넣기\n// 5. MainNavigation 의 링크는 활성화 처리 하기\n// 6. EventsPage에 dummy events list 출력\n//     모든 목록 항목에는 해당 EventDetailPage에 대한 링크가 포함되어야 합니다\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOGO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/class07/lesson/04_react/04_react+next/learning/route-app/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. 컴포넌트 페이지 5개 추가 (콘텐츠는 h1으로 간단히 구성)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. 5개의 페이지에 라우팅 과 라우트 정의 하기\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. 모든 페이지에 <MainNavigation> 컴포넌트를 추가하는 root layout 을 추가하기\n// 4. MainNavigation 에 페이지 링크 넣기\n// 5. MainNavigation 의 링크는 활성화 처리 하기\n// 6. EventsPage에 dummy events list 출력\n//     모든 목록 항목에는 해당 EventDetailPage에 대한 링크가 포함되어야 합니다\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<h1>LOGO</h1>\n\t\t</>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAGA,CAAA,EAAG;EACd,oBACCC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACCF,OAAA;MAAAE,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACZ,CAAC;AAEL;AAACC,EAAA,GANQR,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}